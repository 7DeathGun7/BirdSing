// <auto-generated />
using System;
using BirdSing.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BirdSing.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BirdSing.Models.Alumno", b =>
                {
                    b.Property<int>("MatriculaAlumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatriculaAlumno"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Curp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGrado")
                        .HasColumnType("int");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<string>("NombreAlumno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MatriculaAlumno");

                    b.HasIndex("IdGrado");

                    b.HasIndex("IdGrupo");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("BirdSing.Models.AlumnoTutor", b =>
                {
                    b.Property<int>("MatriculaAlumno")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdTutor")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MatriculaAlumno", "IdTutor");

                    b.HasIndex("IdTutor");

                    b.ToTable("AlumnosTutores");
                });

            modelBuilder.Entity("BirdSing.Models.Aviso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlumnoMatriculaAlumno")
                        .HasColumnType("int");

                    b.Property<int?>("DocenteIdDocente")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDocente")
                        .HasColumnType("int");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int>("IdMateria")
                        .HasColumnType("int");

                    b.Property<int>("IdTutor")
                        .HasColumnType("int");

                    b.Property<bool>("Leido")
                        .HasColumnType("bit");

                    b.Property<int?>("MateriaIdMateria")
                        .HasColumnType("int");

                    b.Property<int?>("MatriculaAlumno")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAviso")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TutorIdTutor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlumnoMatriculaAlumno");

                    b.HasIndex("DocenteIdDocente");

                    b.HasIndex("IdDocente");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdMateria");

                    b.HasIndex("IdTutor");

                    b.HasIndex("MateriaIdMateria");

                    b.HasIndex("MatriculaAlumno");

                    b.HasIndex("TutorIdTutor");

                    b.ToTable("Avisos");
                });

            modelBuilder.Entity("BirdSing.Models.Docente", b =>
                {
                    b.Property<int>("IdDocente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDocente"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("MatriculaSEP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdDocente");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("BirdSing.Models.Grado", b =>
                {
                    b.Property<int>("IdGrado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrado"));

                    b.Property<string>("Grados")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdGrado");

                    b.ToTable("Grados");
                });

            modelBuilder.Entity("BirdSing.Models.Grupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGrupo"));

                    b.Property<string>("Grupos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdGrado")
                        .HasColumnType("int");

                    b.HasKey("IdGrupo");

                    b.HasIndex("IdGrado");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("BirdSing.Models.Materia", b =>
                {
                    b.Property<int>("IdMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateria"));

                    b.Property<int>("IdGrado")
                        .HasColumnType("int");

                    b.Property<string>("NombreMateria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMateria");

                    b.HasIndex("IdGrado");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("BirdSing.Models.MateriaDocente", b =>
                {
                    b.Property<int>("IdDocente")
                        .HasColumnType("int");

                    b.Property<int>("IdMateria")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("IdDocente", "IdMateria");

                    b.HasIndex("IdMateria");

                    b.ToTable("MateriasDocentes");
                });

            modelBuilder.Entity("BirdSing.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BirdSing.Models.Tutor", b =>
                {
                    b.Property<int>("IdTutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTutor"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTutor");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Tutores");
                });

            modelBuilder.Entity("BirdSing.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BirdSing.Models.Alumno", b =>
                {
                    b.HasOne("BirdSing.Models.Grado", "Grado")
                        .WithMany()
                        .HasForeignKey("IdGrado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BirdSing.Models.Grupo", "Grupo")
                        .WithMany("Alumnos")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grado");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("BirdSing.Models.AlumnoTutor", b =>
                {
                    b.HasOne("BirdSing.Models.Tutor", "Tutor")
                        .WithMany("AlumnosTutores")
                        .HasForeignKey("IdTutor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BirdSing.Models.Alumno", "Alumno")
                        .WithMany("AlumnosTutores")
                        .HasForeignKey("MatriculaAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("BirdSing.Models.Aviso", b =>
                {
                    b.HasOne("BirdSing.Models.Alumno", null)
                        .WithMany("Avisos")
                        .HasForeignKey("AlumnoMatriculaAlumno");

                    b.HasOne("BirdSing.Models.Docente", null)
                        .WithMany("Avisos")
                        .HasForeignKey("DocenteIdDocente");

                    b.HasOne("BirdSing.Models.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("IdDocente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BirdSing.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BirdSing.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("IdMateria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BirdSing.Models.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("IdTutor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BirdSing.Models.Materia", null)
                        .WithMany("Avisos")
                        .HasForeignKey("MateriaIdMateria");

                    b.HasOne("BirdSing.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("MatriculaAlumno")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BirdSing.Models.Tutor", null)
                        .WithMany("Avisos")
                        .HasForeignKey("TutorIdTutor");

                    b.Navigation("Alumno");

                    b.Navigation("Docente");

                    b.Navigation("Grupo");

                    b.Navigation("Materia");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("BirdSing.Models.Docente", b =>
                {
                    b.HasOne("BirdSing.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BirdSing.Models.Grupo", b =>
                {
                    b.HasOne("BirdSing.Models.Grado", "Grado")
                        .WithMany()
                        .HasForeignKey("IdGrado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grado");
                });

            modelBuilder.Entity("BirdSing.Models.Materia", b =>
                {
                    b.HasOne("BirdSing.Models.Grado", "Grado")
                        .WithMany()
                        .HasForeignKey("IdGrado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grado");
                });

            modelBuilder.Entity("BirdSing.Models.MateriaDocente", b =>
                {
                    b.HasOne("BirdSing.Models.Docente", "Docente")
                        .WithMany("MateriasDocentes")
                        .HasForeignKey("IdDocente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BirdSing.Models.Materia", "Materia")
                        .WithMany("MateriasDocentes")
                        .HasForeignKey("IdMateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("BirdSing.Models.Tutor", b =>
                {
                    b.HasOne("BirdSing.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("BirdSing.Models.Usuario", b =>
                {
                    b.HasOne("BirdSing.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BirdSing.Models.Alumno", b =>
                {
                    b.Navigation("AlumnosTutores");

                    b.Navigation("Avisos");
                });

            modelBuilder.Entity("BirdSing.Models.Docente", b =>
                {
                    b.Navigation("Avisos");

                    b.Navigation("MateriasDocentes");
                });

            modelBuilder.Entity("BirdSing.Models.Grupo", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("BirdSing.Models.Materia", b =>
                {
                    b.Navigation("Avisos");

                    b.Navigation("MateriasDocentes");
                });

            modelBuilder.Entity("BirdSing.Models.Tutor", b =>
                {
                    b.Navigation("AlumnosTutores");

                    b.Navigation("Avisos");
                });
#pragma warning restore 612, 618
        }
    }
}
